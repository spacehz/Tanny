const mongoose = require('mongoose');
const User = require('../models/User');
const connectDB = require('../config/database');

// Connecter √† la base de donn√©es
connectDB();

// Fonction principale pour v√©rifier les commer√ßants
const verifyMerchants = async () => {
  try {
    console.log('Connexion √† la base de donn√©es...');
    
    // R√©cup√©rer tous les commer√ßants
    const merchants = await User.find({ role: 'commercant' }).select('-password');
    
    console.log(`\nüìã Liste des commer√ßants (${merchants.length} trouv√©s):`);
    
    if (merchants.length === 0) {
      console.log('Aucun commer√ßant trouv√© dans la base de donn√©es.');
    } else {
      merchants.forEach((merchant, index) => {
        console.log(`\n${index + 1}. ${merchant.name}`);
        console.log(`   Commerce: ${merchant.businessName}`);
        console.log(`   Email: ${merchant.email}`);
        console.log(`   Adresse: ${merchant.address}`);
        console.log(`   T√©l√©phone: ${merchant.phoneNumber}`);
        console.log(`   Statut: ${merchant.isActive ? 'Actif' : 'Inactif'}`);
      });
    }
    
    // Fermer la connexion √† la base de donn√©es
    await mongoose.connection.close();
    console.log('\nConnexion √† la base de donn√©es ferm√©e.');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification des commer√ßants:', error.message);
    // Fermer la connexion √† la base de donn√©es en cas d'erreur
    await mongoose.connection.close();
  }
};

// Ex√©cuter la fonction principale
verifyMerchants();
